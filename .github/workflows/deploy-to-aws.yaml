on: [push]


defaults:
  run:
    shell: bash


jobs: 
  aws-deploy:
    needs: npm-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
        environment: [development, production]

    env:
      FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
      LAMBDA_EXECUTION_ROLE: ${{ secrets.LAMBDA_EXECUTION_ROLE_ARN }}
      LAMBDA_ENV_VARS: |
        join(["DISCORD_BOT_PUBLIC_KEY="${{ secrets.DISCORD_BOT_PUBLIC_KEY }},
              "DISCORD_BOT_TOKEN="${{ secrets.DISCORD_BOT_TOKEN }},
              "POSTMAN_VERIFY="${{ secrets.POSTMAN_VERIFY }},
              "VERSION=SOME_VERSION+SHA"])

    permissions:
      id-token: write
      contents: read

    name: Deploy to AWS - ${{ matrix.environment }} - Node ${{ matrix.node-version }} 
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: function.zip

      # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
      
      - name: Attempt to Create Lambda
        id: createLambda
        continue-on-error: true
        run: |
          aws lambda create-function \
            --function-name ${FUNCTION_NAME} \
            --runtime ${RUNTIME} \
            --role ${LAMBDA_EXECUTION_ROLE} \
            --handler index.handler \
            --timeout 10 \
            --memory-size 256 \
            --architectures arm64 \
            --zip-file fileb://function.zip
        env:
          RUNTIME: nodejs${{ matrix.node-version }}.x
      
      - name: Create Function URL if Create is successful
        if: ${{ steps.createLambda.outcome == 'success' }}
        run: |
          aws lambda create-function-url-config \
          --function-name ${FUNCTION_NAME} \
          --auth-type NONE

      - name: Update Lambda if Create Fails
        if: ${{ steps.createLambda.outcome == 'failure' }}
        run: |
          aws lambda update-function-code \
            --function-name ${FUNCTION_NAME} \
            --zip-file fileb://function.zip

      - name: Update Lambda Environment Variables
        run: |
          aws lambda update-function-configuration \
            --function-name ${FUNCTION_NAME} \
            --environment Variables=${LAMBDA_ENV_VARS}
          
